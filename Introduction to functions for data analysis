{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1P0C1MGlVkSVVKHrvsJWqif-9oBrLyRqC","timestamp":1739427190211},{"file_id":"13LRheeXB-Zac-cHUmNv8yPY5aRYEyQ6B","timestamp":1739257100757}],"authorship_tag":"ABX9TyOk4/GXI6ofFScboHiCWdvL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eWwGvxWab10K","executionInfo":{"status":"ok","timestamp":1739422434425,"user_tz":-330,"elapsed":26530,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"bce6b1a7-3b32-4f59-fd8b-7def9b899583"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"Vbw8XPdGcfja"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["datasetpath ='/content/drive/MyDrive/matches_1930_2022.csv'"],"metadata":{"id":"7xxcBgCfck-F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(datasetpath)"],"metadata":{"id":"p-iO31dmcvxj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"qNO-a5DIc8r7","executionInfo":{"status":"ok","timestamp":1739422444305,"user_tz":-330,"elapsed":27,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"f5cb633c-81d3-45c4-bbef-2ba9ed5aaf5d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         home_team away_team  home_score  home_xg  home_penalty  away_score  \\\n","0        Argentina    France           3      3.3           4.0           3   \n","1          Croatia   Morocco           2      0.7           NaN           1   \n","2           France   Morocco           2      2.0           NaN           0   \n","3        Argentina   Croatia           3      2.3           NaN           0   \n","4          Morocco  Portugal           1      1.4           NaN           0   \n","..             ...       ...         ...      ...           ...         ...   \n","959      Argentina    France           1      NaN           NaN           0   \n","960     Yugoslavia    Brazil           2      NaN           NaN           1   \n","961        Romania      Peru           3      NaN           NaN           1   \n","962  United States   Belgium           3      NaN           NaN           0   \n","963         France    Mexico           4      NaN           NaN           1   \n","\n","     away_xg  away_penalty      home_manager          home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni          Lionel Messi  ...   \n","1        1.2           NaN      Zlatko Dalić           Luka Modrić  ...   \n","2        0.9           NaN  Didier Deschamps           Hugo Lloris  ...   \n","3        0.5           NaN    Lionel Scaloni          Lionel Messi  ...   \n","4        0.9           NaN   Hoalid Regragui          Romain Saïss  ...   \n","..       ...           ...               ...                   ...  ...   \n","959      NaN           NaN  Francisco Olazar       Manuel Ferreira  ...   \n","960      NaN           NaN   Bosko Simonovic       Milutin Ivković  ...   \n","961      NaN           NaN     Octav Luchide          Emerich Vogl  ...   \n","962      NaN           NaN        Bob Millar            Tom Florie  ...   \n","963      NaN           NaN     Raoul Caudron  Alexandre Villaplane  ...   \n","\n","    home_penalty_shootout_miss_long  \\\n","0                               NaN   \n","1                               NaN   \n","2                               NaN   \n","3                               NaN   \n","4                               NaN   \n","..                              ...   \n","959                             NaN   \n","960                             NaN   \n","961                             NaN   \n","962                             NaN   \n","963                             NaN   \n","\n","                       away_penalty_shootout_miss_long  home_red_card  \\\n","0    ['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...            NaN   \n","1                                                  NaN            NaN   \n","2                                                  NaN            NaN   \n","3                                                  NaN            NaN   \n","4                                                  NaN            NaN   \n","..                                                 ...            ...   \n","959                                                NaN            NaN   \n","960                                                NaN            NaN   \n","961                                                NaN            NaN   \n","962                                                NaN            NaN   \n","963                                                NaN            NaN   \n","\n","            away_red_card   home_yellow_red_card away_yellow_red_card  \\\n","0                     NaN                    NaN                  NaN   \n","1                     NaN                    NaN                  NaN   \n","2                     NaN                    NaN                  NaN   \n","3                     NaN                    NaN                  NaN   \n","4                     NaN  Walid Cheddira · 90+3                  NaN   \n","..                    ...                    ...                  ...   \n","959                   NaN                    NaN                  NaN   \n","960                   NaN                    NaN                  NaN   \n","961  Plácido Galindo · 70                    NaN                  NaN   \n","962                   NaN                    NaN                  NaN   \n","963                   NaN                    NaN                  NaN   \n","\n","                                 home_yellow_card_long  \\\n","0    ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","1                                                  NaN   \n","2                                                  NaN   \n","3    ['68&rsquor;|2:0|Cristian Romero', '71&rsquor;...   \n","4    ['70&rsquor;|1:0|Achraf Dari', '90+1&rsquor;|1...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","1    ['69&rsquor;|2:1|Azzedine Ounahi', '84&rsquor;...   \n","2                    ['27&rsquor;|1:0|Sofiane Boufal']   \n","3    ['32&rsquor;|0:0|Mateo Kovačić', '32&rsquor;|0...   \n","4                           ['87&rsquor;|1:0|Vitinha']   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","1    ['61&rsquor;|2:1|Nikola Vlašić|for Andrej Kram...   \n","2    ['65&rsquor;|1:0|Marcus Thuram|for Olivier Gir...   \n","3    ['62&rsquor;|2:0|Lisandro Martínez|for Leandro...   \n","4    ['57&rsquor;|1:0|Achraf Dari|for Romain Saïss'...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               away_substitute_in_long  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...  \n","1    ['46&rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...  \n","2    ['21&rsquor;|1:0|Selim Amallah|for Romain Saïs...  \n","3    ['46&rsquor;|2:0|Mislav Oršić|for Borna Sosa',...  \n","4    ['51&rsquor;|1:0|João Cancelo|for Raphaël Guer...  \n","..                                                 ...  \n","959                                                NaN  \n","960                                                NaN  \n","961                                                NaN  \n","962                                                NaN  \n","963                                                NaN  \n","\n","[964 rows x 44 columns]"],"text/html":["\n","  <div id=\"df-7310e01c-2608-48ae-8460-ebdb8392113d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>home_penalty_shootout_miss_long</th>\n","      <th>away_penalty_shootout_miss_long</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Croatia</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>NaN</td>\n","      <td>Zlatko Dalić</td>\n","      <td>Luka Modrić</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['69&amp;rsquor;|2:1|Azzedine Ounahi', '84&amp;rsquor;...</td>\n","      <td>['61&amp;rsquor;|2:1|Nikola Vlašić|for Andrej Kram...</td>\n","      <td>['46&amp;rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>France</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Didier Deschamps</td>\n","      <td>Hugo Lloris</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['27&amp;rsquor;|1:0|Sofiane Boufal']</td>\n","      <td>['65&amp;rsquor;|1:0|Marcus Thuram|for Olivier Gir...</td>\n","      <td>['21&amp;rsquor;|1:0|Selim Amallah|for Romain Saïs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Argentina</td>\n","      <td>Croatia</td>\n","      <td>3</td>\n","      <td>2.3</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['68&amp;rsquor;|2:0|Cristian Romero', '71&amp;rsquor;...</td>\n","      <td>['32&amp;rsquor;|0:0|Mateo Kovačić', '32&amp;rsquor;|0...</td>\n","      <td>['62&amp;rsquor;|2:0|Lisandro Martínez|for Leandro...</td>\n","      <td>['46&amp;rsquor;|2:0|Mislav Oršić|for Borna Sosa',...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Morocco</td>\n","      <td>Portugal</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Hoalid Regragui</td>\n","      <td>Romain Saïss</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Walid Cheddira · 90+3</td>\n","      <td>NaN</td>\n","      <td>['70&amp;rsquor;|1:0|Achraf Dari', '90+1&amp;rsquor;|1...</td>\n","      <td>['87&amp;rsquor;|1:0|Vitinha']</td>\n","      <td>['57&amp;rsquor;|1:0|Achraf Dari|for Romain Saïss'...</td>\n","      <td>['51&amp;rsquor;|1:0|João Cancelo|for Raphaël Guer...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Francisco Olazar</td>\n","      <td>Manuel Ferreira</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>Yugoslavia</td>\n","      <td>Brazil</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bosko Simonovic</td>\n","      <td>Milutin Ivković</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>Romania</td>\n","      <td>Peru</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Octav Luchide</td>\n","      <td>Emerich Vogl</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Plácido Galindo · 70</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>United States</td>\n","      <td>Belgium</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bob Millar</td>\n","      <td>Tom Florie</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>963</th>\n","      <td>France</td>\n","      <td>Mexico</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Raoul Caudron</td>\n","      <td>Alexandre Villaplane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>964 rows × 44 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7310e01c-2608-48ae-8460-ebdb8392113d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7310e01c-2608-48ae-8460-ebdb8392113d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7310e01c-2608-48ae-8460-ebdb8392113d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c85879e1-2e91-4a4a-8452-e576be3b733d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c85879e1-2e91-4a4a-8452-e576be3b733d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c85879e1-2e91-4a4a-8452-e576be3b733d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d49d599e-59bf-4a71-b8ad-808c4e3a8b42\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d49d599e-59bf-4a71-b8ad-808c4e3a8b42 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['home_team'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"6mE4OwZSdAX-","executionInfo":{"status":"ok","timestamp":1739422449188,"user_tz":-330,"elapsed":597,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"6f0ffa23-1f94-4f21-b47a-0857c8be6191"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["home_team\n","Brazil                    85\n","Argentina                 59\n","Italy                     57\n","England                   40\n","Germany                   40\n","                          ..\n","Jamaica                    1\n","FR Yugoslavia              1\n","Angola                     1\n","Trinidad and Tobago        1\n","Bosnia and Herzegovina     1\n","Name: count, Length: 82, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>home_team</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Brazil</th>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>Italy</th>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>England</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>Germany</th>\n","      <td>40</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Jamaica</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>FR Yugoslavia</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Angola</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Trinidad and Tobago</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Bosnia and Herzegovina</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>82 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["filteredData = df['home_team'].value_counts()"],"metadata":{"id":"hyRwaNsldLq-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f2 = filteredData[filteredData >= 40].index"],"metadata":{"id":"U6o8ZYSCdiDx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["f2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2zEh4lgZd4LI","executionInfo":{"status":"ok","timestamp":1739422457331,"user_tz":-330,"elapsed":479,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"debd43b6-2ff6-4684-ab78-b0a6a1b97430"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Brazil', 'Argentina', 'Italy', 'England', 'Germany'], dtype='object', name='home_team')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df2 = df[df[\"home_team\"].isin(f2)]"],"metadata":{"id":"Aa2_Jxprd6XV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2[\"home_xg\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":680},"id":"IEPvDCule0k6","executionInfo":{"status":"ok","timestamp":1739252190944,"user_tz":-330,"elapsed":105,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"e2e48646-8767-4613-bfba-5e62aa7c13b6","collapsed":true},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["home_xg\n","2.2    2\n","2.4    2\n","1.0    2\n","1.4    2\n","2.8    2\n","2.1    1\n","1.3    1\n","2.6    1\n","0.9    1\n","2.7    1\n","3.3    1\n","2.3    1\n","3.1    1\n","0.8    1\n","0.3    1\n","1.6    1\n","3.6    1\n","1.9    1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>home_xg</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2.2</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2.4</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1.0</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1.4</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2.8</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2.1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1.3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2.6</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.9</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2.7</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2.3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.8</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1.6</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.6</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1.9</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["%matplotlib inline"],"metadata":{"id":"Y0i7ZWPxglzh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2.plot(x = 'home_team',y = 'home_xg',kind =  \"bar\")"],"metadata":{"id":"Q4IPrk06gwdl","colab":{"base_uri":"https://localhost:8080/","height":273},"executionInfo":{"status":"ok","timestamp":1739252601176,"user_tz":-330,"elapsed":2633,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"2ccc3d69-2434-40f4-db1c-accc73db038d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='home_team'>"]},"metadata":{},"execution_count":26},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["f3 = df2[\"home_xg\"]>2.5"],"metadata":{"id":"GMWqJR30iKKd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3=df2[f3]"],"metadata":{"id":"w07WW5GPiZ3o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":440},"id":"nR3gwL6KikU9","executionInfo":{"status":"ok","timestamp":1739252719488,"user_tz":-330,"elapsed":179,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"0a67eba7-c5c9-432b-dd94-d9cbab6f49a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     home_team       away_team  home_score  home_xg  home_penalty  away_score  \\\n","0    Argentina          France           3      3.3           4.0           3   \n","11      Brazil  Korea Republic           4      3.6           NaN           1   \n","53     Germany           Japan           1      3.1           NaN           2   \n","71      Brazil         Belgium           1      2.8           NaN           2   \n","74      Brazil          Mexico           2      2.7           NaN           0   \n","96     England          Panama           6      2.8           NaN           1   \n","102     Brazil      Costa Rica           2      2.6           NaN           0   \n","\n","     away_xg  away_penalty      home_manager  home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni  Lionel Messi  ...   \n","11       0.5           NaN              Tite  Thiago Silva  ...   \n","53       1.5           NaN       Hansi Flick  Manuel Neuer  ...   \n","71       0.5           NaN              Tite       Miranda  ...   \n","74       0.7           NaN              Tite  Thiago Silva  ...   \n","96       1.1           NaN  Gareth Southgate    Harry Kane  ...   \n","102      0.1           NaN              Tite  Thiago Silva  ...   \n","\n","    home_penalty_shootout_miss_long  \\\n","0                               NaN   \n","11                              NaN   \n","53                              NaN   \n","71                              NaN   \n","74                              NaN   \n","96                              NaN   \n","102                             NaN   \n","\n","                       away_penalty_shootout_miss_long  home_red_card  \\\n","0    ['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...            NaN   \n","11                                                 NaN            NaN   \n","53                                                 NaN            NaN   \n","71                                                 NaN            NaN   \n","74                                                 NaN            NaN   \n","96                                                 NaN            NaN   \n","102                                                NaN            NaN   \n","\n","    away_red_card home_yellow_red_card away_yellow_red_card  \\\n","0             NaN                  NaN                  NaN   \n","11            NaN                  NaN                  NaN   \n","53            NaN                  NaN                  NaN   \n","71            NaN                  NaN                  NaN   \n","74            NaN                  NaN                  NaN   \n","96            NaN                  NaN                  NaN   \n","102           NaN                  NaN                  NaN   \n","\n","                                 home_yellow_card_long  \\\n","0    ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","11                                                 NaN   \n","53                                                 NaN   \n","71   ['85&rsquor;|1:2|Fernandinho', '90&rsquor;|1:2...   \n","74   ['43&rsquor;|0:0|Filipe Luís', '59&rsquor;|1:0...   \n","96               ['23&rsquor;|2:0|Ruben Loftus-Cheek']   \n","102  ['81&rsquor;|0:0|Philippe Coutinho', '81&rsquo...   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","11                   ['44&rsquor;|4:0|Jung Woo-young']   \n","53                                                 NaN   \n","71   ['47&rsquor;|0:2|Toby Alderweireld', '71&rsquo...   \n","74   ['38&rsquor;|0:0|Edson Álvarez', '55&rsquor;|1...   \n","96   ['10&rsquor;|1:0|Armando Cooper', '44&rsquor;|...   \n","102                   ['84&rsquor;|0:0|Johnny Acosta']   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","11   ['63&rsquor;|4:0|Dani Alves|for Éder Militão',...   \n","53   ['67&rsquor;|1:0|Jonas Hofmann|for Thomas Müll...   \n","71   ['46&rsquor;|0:2|Roberto Firmino|for Willian',...   \n","74   ['80&rsquor;|1:0|Fernandinho|for Paulinho', '8...   \n","96   ['63&rsquor;|6:0|Jamie Vardy|for Harry Kane', ...   \n","102  ['46&rsquor;|0:0|Douglas Costa|for Willian', '...   \n","\n","                               away_substitute_in_long  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...  \n","11   ['46&rsquor;|4:0|Hong Chul|for Kim Jin-su', '4...  \n","53   ['46&rsquor;|1:0|Takehiro Tomiyasu|for Takefus...  \n","71   ['83&rsquor;|1:2|Thomas Vermaelen|for Nacer Ch...  \n","74   ['46&rsquor;|0:0|Miguel Layún|for Rafael Márqu...  \n","96   ['62&rsquor;|5:0|Ricardo Ávila|for Aníbal Godo...  \n","102  ['54&rsquor;|0:0|Christian Bolaños|for Marco U...  \n","\n","[7 rows x 44 columns]"],"text/html":["\n","  <div id=\"df-f64d164c-cee5-4ea1-8a72-decf778a8d51\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>home_penalty_shootout_miss_long</th>\n","      <th>away_penalty_shootout_miss_long</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Brazil</td>\n","      <td>Korea Republic</td>\n","      <td>4</td>\n","      <td>3.6</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['44&amp;rsquor;|4:0|Jung Woo-young']</td>\n","      <td>['63&amp;rsquor;|4:0|Dani Alves|for Éder Militão',...</td>\n","      <td>['46&amp;rsquor;|4:0|Hong Chul|for Kim Jin-su', '4...</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Germany</td>\n","      <td>Japan</td>\n","      <td>1</td>\n","      <td>3.1</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1.5</td>\n","      <td>NaN</td>\n","      <td>Hansi Flick</td>\n","      <td>Manuel Neuer</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['67&amp;rsquor;|1:0|Jonas Hofmann|for Thomas Müll...</td>\n","      <td>['46&amp;rsquor;|1:0|Takehiro Tomiyasu|for Takefus...</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Brazil</td>\n","      <td>Belgium</td>\n","      <td>1</td>\n","      <td>2.8</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Miranda</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['85&amp;rsquor;|1:2|Fernandinho', '90&amp;rsquor;|1:2...</td>\n","      <td>['47&amp;rsquor;|0:2|Toby Alderweireld', '71&amp;rsquo...</td>\n","      <td>['46&amp;rsquor;|0:2|Roberto Firmino|for Willian',...</td>\n","      <td>['83&amp;rsquor;|1:2|Thomas Vermaelen|for Nacer Ch...</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Brazil</td>\n","      <td>Mexico</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['43&amp;rsquor;|0:0|Filipe Luís', '59&amp;rsquor;|1:0...</td>\n","      <td>['38&amp;rsquor;|0:0|Edson Álvarez', '55&amp;rsquor;|1...</td>\n","      <td>['80&amp;rsquor;|1:0|Fernandinho|for Paulinho', '8...</td>\n","      <td>['46&amp;rsquor;|0:0|Miguel Layún|for Rafael Márqu...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>England</td>\n","      <td>Panama</td>\n","      <td>6</td>\n","      <td>2.8</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.1</td>\n","      <td>NaN</td>\n","      <td>Gareth Southgate</td>\n","      <td>Harry Kane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['23&amp;rsquor;|2:0|Ruben Loftus-Cheek']</td>\n","      <td>['10&amp;rsquor;|1:0|Armando Cooper', '44&amp;rsquor;|...</td>\n","      <td>['63&amp;rsquor;|6:0|Jamie Vardy|for Harry Kane', ...</td>\n","      <td>['62&amp;rsquor;|5:0|Ricardo Ávila|for Aníbal Godo...</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>Brazil</td>\n","      <td>Costa Rica</td>\n","      <td>2</td>\n","      <td>2.6</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['81&amp;rsquor;|0:0|Philippe Coutinho', '81&amp;rsquo...</td>\n","      <td>['84&amp;rsquor;|0:0|Johnny Acosta']</td>\n","      <td>['46&amp;rsquor;|0:0|Douglas Costa|for Willian', '...</td>\n","      <td>['54&amp;rsquor;|0:0|Christian Bolaños|for Marco U...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7 rows × 44 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f64d164c-cee5-4ea1-8a72-decf778a8d51')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f64d164c-cee5-4ea1-8a72-decf778a8d51 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f64d164c-cee5-4ea1-8a72-decf778a8d51');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-884dfc67-b108-4063-b8c6-faec96fea64b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-884dfc67-b108-4063-b8c6-faec96fea64b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-884dfc67-b108-4063-b8c6-faec96fea64b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b74a08eb-2f39-4aff-ac65-9d273c833d65\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df3')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b74a08eb-2f39-4aff-ac65-9d273c833d65 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df3');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt"],"metadata":{"id":"LfYqVM_2k6aK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df3.plot(x = 'home_team',y = 'home_xg',kind =  \"bar\",color = \"orange\")\n","plt.xlabel(\"Home team\")\n","plt.ylabel(\"Home xg\")\n","plt.title(\"Home team estimated goals\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"ZtvMpjyLinfQ","executionInfo":{"status":"ok","timestamp":1739254272285,"user_tz":-330,"elapsed":432,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"96068155-01ff-491f-e8db-40f36dbcbb8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Home team estimated goals')"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":440},"id":"S4GtPkH9l2z_","executionInfo":{"status":"ok","timestamp":1739253583476,"user_tz":-330,"elapsed":158,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"94679e2f-d1c4-42ce-f11b-27832a0a75bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     home_team       away_team  home_score  home_xg  home_penalty  away_score  \\\n","0    Argentina          France           3      3.3           4.0           3   \n","11      Brazil  Korea Republic           4      3.6           NaN           1   \n","53     Germany           Japan           1      3.1           NaN           2   \n","71      Brazil         Belgium           1      2.8           NaN           2   \n","74      Brazil          Mexico           2      2.7           NaN           0   \n","96     England          Panama           6      2.8           NaN           1   \n","102     Brazil      Costa Rica           2      2.6           NaN           0   \n","\n","     away_xg  away_penalty      home_manager  home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni  Lionel Messi  ...   \n","11       0.5           NaN              Tite  Thiago Silva  ...   \n","53       1.5           NaN       Hansi Flick  Manuel Neuer  ...   \n","71       0.5           NaN              Tite       Miranda  ...   \n","74       0.7           NaN              Tite  Thiago Silva  ...   \n","96       1.1           NaN  Gareth Southgate    Harry Kane  ...   \n","102      0.1           NaN              Tite  Thiago Silva  ...   \n","\n","    home_penalty_shootout_miss_long  \\\n","0                               NaN   \n","11                              NaN   \n","53                              NaN   \n","71                              NaN   \n","74                              NaN   \n","96                              NaN   \n","102                             NaN   \n","\n","                       away_penalty_shootout_miss_long  home_red_card  \\\n","0    ['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...            NaN   \n","11                                                 NaN            NaN   \n","53                                                 NaN            NaN   \n","71                                                 NaN            NaN   \n","74                                                 NaN            NaN   \n","96                                                 NaN            NaN   \n","102                                                NaN            NaN   \n","\n","    away_red_card home_yellow_red_card away_yellow_red_card  \\\n","0             NaN                  NaN                  NaN   \n","11            NaN                  NaN                  NaN   \n","53            NaN                  NaN                  NaN   \n","71            NaN                  NaN                  NaN   \n","74            NaN                  NaN                  NaN   \n","96            NaN                  NaN                  NaN   \n","102           NaN                  NaN                  NaN   \n","\n","                                 home_yellow_card_long  \\\n","0    ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","11                                                 NaN   \n","53                                                 NaN   \n","71   ['85&rsquor;|1:2|Fernandinho', '90&rsquor;|1:2...   \n","74   ['43&rsquor;|0:0|Filipe Luís', '59&rsquor;|1:0...   \n","96               ['23&rsquor;|2:0|Ruben Loftus-Cheek']   \n","102  ['81&rsquor;|0:0|Philippe Coutinho', '81&rsquo...   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","11                   ['44&rsquor;|4:0|Jung Woo-young']   \n","53                                                 NaN   \n","71   ['47&rsquor;|0:2|Toby Alderweireld', '71&rsquo...   \n","74   ['38&rsquor;|0:0|Edson Álvarez', '55&rsquor;|1...   \n","96   ['10&rsquor;|1:0|Armando Cooper', '44&rsquor;|...   \n","102                   ['84&rsquor;|0:0|Johnny Acosta']   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","11   ['63&rsquor;|4:0|Dani Alves|for Éder Militão',...   \n","53   ['67&rsquor;|1:0|Jonas Hofmann|for Thomas Müll...   \n","71   ['46&rsquor;|0:2|Roberto Firmino|for Willian',...   \n","74   ['80&rsquor;|1:0|Fernandinho|for Paulinho', '8...   \n","96   ['63&rsquor;|6:0|Jamie Vardy|for Harry Kane', ...   \n","102  ['46&rsquor;|0:0|Douglas Costa|for Willian', '...   \n","\n","                               away_substitute_in_long  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...  \n","11   ['46&rsquor;|4:0|Hong Chul|for Kim Jin-su', '4...  \n","53   ['46&rsquor;|1:0|Takehiro Tomiyasu|for Takefus...  \n","71   ['83&rsquor;|1:2|Thomas Vermaelen|for Nacer Ch...  \n","74   ['46&rsquor;|0:0|Miguel Layún|for Rafael Márqu...  \n","96   ['62&rsquor;|5:0|Ricardo Ávila|for Aníbal Godo...  \n","102  ['54&rsquor;|0:0|Christian Bolaños|for Marco U...  \n","\n","[7 rows x 44 columns]"],"text/html":["\n","  <div id=\"df-a5f27e5a-5176-4bf7-a480-7d27d3c23143\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>home_penalty_shootout_miss_long</th>\n","      <th>away_penalty_shootout_miss_long</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Brazil</td>\n","      <td>Korea Republic</td>\n","      <td>4</td>\n","      <td>3.6</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['44&amp;rsquor;|4:0|Jung Woo-young']</td>\n","      <td>['63&amp;rsquor;|4:0|Dani Alves|for Éder Militão',...</td>\n","      <td>['46&amp;rsquor;|4:0|Hong Chul|for Kim Jin-su', '4...</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>Germany</td>\n","      <td>Japan</td>\n","      <td>1</td>\n","      <td>3.1</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>1.5</td>\n","      <td>NaN</td>\n","      <td>Hansi Flick</td>\n","      <td>Manuel Neuer</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['67&amp;rsquor;|1:0|Jonas Hofmann|for Thomas Müll...</td>\n","      <td>['46&amp;rsquor;|1:0|Takehiro Tomiyasu|for Takefus...</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>Brazil</td>\n","      <td>Belgium</td>\n","      <td>1</td>\n","      <td>2.8</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Miranda</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['85&amp;rsquor;|1:2|Fernandinho', '90&amp;rsquor;|1:2...</td>\n","      <td>['47&amp;rsquor;|0:2|Toby Alderweireld', '71&amp;rsquo...</td>\n","      <td>['46&amp;rsquor;|0:2|Roberto Firmino|for Willian',...</td>\n","      <td>['83&amp;rsquor;|1:2|Thomas Vermaelen|for Nacer Ch...</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>Brazil</td>\n","      <td>Mexico</td>\n","      <td>2</td>\n","      <td>2.7</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['43&amp;rsquor;|0:0|Filipe Luís', '59&amp;rsquor;|1:0...</td>\n","      <td>['38&amp;rsquor;|0:0|Edson Álvarez', '55&amp;rsquor;|1...</td>\n","      <td>['80&amp;rsquor;|1:0|Fernandinho|for Paulinho', '8...</td>\n","      <td>['46&amp;rsquor;|0:0|Miguel Layún|for Rafael Márqu...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>England</td>\n","      <td>Panama</td>\n","      <td>6</td>\n","      <td>2.8</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.1</td>\n","      <td>NaN</td>\n","      <td>Gareth Southgate</td>\n","      <td>Harry Kane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['23&amp;rsquor;|2:0|Ruben Loftus-Cheek']</td>\n","      <td>['10&amp;rsquor;|1:0|Armando Cooper', '44&amp;rsquor;|...</td>\n","      <td>['63&amp;rsquor;|6:0|Jamie Vardy|for Harry Kane', ...</td>\n","      <td>['62&amp;rsquor;|5:0|Ricardo Ávila|for Aníbal Godo...</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>Brazil</td>\n","      <td>Costa Rica</td>\n","      <td>2</td>\n","      <td>2.6</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.1</td>\n","      <td>NaN</td>\n","      <td>Tite</td>\n","      <td>Thiago Silva</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['81&amp;rsquor;|0:0|Philippe Coutinho', '81&amp;rsquo...</td>\n","      <td>['84&amp;rsquor;|0:0|Johnny Acosta']</td>\n","      <td>['46&amp;rsquor;|0:0|Douglas Costa|for Willian', '...</td>\n","      <td>['54&amp;rsquor;|0:0|Christian Bolaños|for Marco U...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7 rows × 44 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5f27e5a-5176-4bf7-a480-7d27d3c23143')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5f27e5a-5176-4bf7-a480-7d27d3c23143 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5f27e5a-5176-4bf7-a480-7d27d3c23143');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d9008fd-d680-4f42-a2f3-4013f8b897dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d9008fd-d680-4f42-a2f3-4013f8b897dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d9008fd-d680-4f42-a2f3-4013f8b897dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c4c98d88-f098-446c-8c25-b83f5c697105\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df3')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c4c98d88-f098-446c-8c25-b83f5c697105 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df3');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df3"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df3.plot(x=\"home_team\",y=['home_score','home_xg'],kind=\"bar\",color=[\"green\",\"red\"])\n","plt.xlabel(\"Home Team\")\n","plt.ylabel(\"Home xg\")\n","plt.title(\"Home Team estimated goals\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":546},"id":"8J35U5cIl5rh","executionInfo":{"status":"ok","timestamp":1739253888849,"user_tz":-330,"elapsed":426,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"b99ab36f-de60-404e-fe9d-0f90c5e10b25"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# groupby\n","df4 = df.groupby(\"home_team\")"],"metadata":{"id":"mNjKh-Djoh_0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df4.mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":276},"id":"SxdhKhx8pDfy","executionInfo":{"status":"ok","timestamp":1739254452396,"user_tz":-330,"elapsed":116,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"4a5ad11a-72c6-47d3-89e5-0536522c4dfb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method GroupBy.mean of <pandas.core.groupby.generic.DataFrameGroupBy object at 0x785a6a425110>>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.groupby.groupby.GroupBy.mean</b><br/>def mean(numeric_only: bool=False, engine: Literal[&#x27;cython&#x27;, &#x27;numba&#x27;] | None=None, engine_kwargs: dict[str, bool] | None=None)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.11/dist-packages/pandas/core/groupby/groupby.py</a>Compute mean of groups, excluding missing values.\n","\n","Parameters\n","----------\n","numeric_only : bool, default False\n","    Include only float, int, boolean columns.\n","\n","    .. versionchanged:: 2.0.0\n","\n","        numeric_only no longer accepts ``None`` and defaults to ``False``.\n","\n","engine : str, default None\n","    * ``&#x27;cython&#x27;`` : Runs the operation through C-extensions from cython.\n","    * ``&#x27;numba&#x27;`` : Runs the operation through JIT compiled code from numba.\n","    * ``None`` : Defaults to ``&#x27;cython&#x27;`` or globally setting\n","      ``compute.use_numba``\n","\n","    .. versionadded:: 1.4.0\n","\n","engine_kwargs : dict, default None\n","    * For ``&#x27;cython&#x27;`` engine, there are no accepted ``engine_kwargs``\n","    * For ``&#x27;numba&#x27;`` engine, the engine can accept ``nopython``, ``nogil``\n","      and ``parallel`` dictionary keys. The values must either be ``True`` or\n","      ``False``. The default ``engine_kwargs`` for the ``&#x27;numba&#x27;`` engine is\n","      ``{{&#x27;nopython&#x27;: True, &#x27;nogil&#x27;: False, &#x27;parallel&#x27;: False}}``\n","\n","    .. versionadded:: 1.4.0\n","\n","Returns\n","-------\n","pandas.Series or pandas.DataFrame\n","\n","See Also\n","--------\n","Series.groupby : Apply a function groupby to a Series.\n","DataFrame.groupby : Apply a function groupby\n","    to each row or column of a DataFrame.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; df = pd.DataFrame({&#x27;A&#x27;: [1, 1, 2, 1, 2],\n","...                    &#x27;B&#x27;: [np.nan, 2, 3, 4, 5],\n","...                    &#x27;C&#x27;: [1, 2, 1, 1, 2]}, columns=[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;])\n","\n","Groupby one column and return the mean of the remaining columns in\n","each group.\n","\n","&gt;&gt;&gt; df.groupby(&#x27;A&#x27;).mean()\n","     B         C\n","A\n","1  3.0  1.333333\n","2  4.0  1.500000\n","\n","Groupby two columns and return the mean of the remaining column.\n","\n","&gt;&gt;&gt; df.groupby([&#x27;A&#x27;, &#x27;B&#x27;]).mean()\n","         C\n","A B\n","1 2.0  2.0\n","  4.0  1.0\n","2 3.0  1.0\n","  5.0  2.0\n","\n","Groupby one column and return the mean of only particular column in\n","the group.\n","\n","&gt;&gt;&gt; df.groupby(&#x27;A&#x27;)[&#x27;B&#x27;].mean()\n","A\n","1    3.0\n","2    4.0\n","Name: B, dtype: float64</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 2365);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["df.groupby(\"home_team\")[\"home_score\"].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"5BKGxh_Tpj-W","executionInfo":{"status":"ok","timestamp":1739254726898,"user_tz":-330,"elapsed":1641,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"2aa74824-6b66-4c99-f7ef-583b64fad4ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["home_team\n","Algeria         0.833333\n","Angola          0.000000\n","Argentina       2.050847\n","Australia       1.000000\n","Austria         2.000000\n","                  ...   \n","Uruguay         2.060606\n","Wales           0.666667\n","West Germany    2.026316\n","Yugoslavia      2.562500\n","Zaire           0.000000\n","Name: home_score, Length: 82, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_score</th>\n","    </tr>\n","    <tr>\n","      <th>home_team</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Algeria</th>\n","      <td>0.833333</td>\n","    </tr>\n","    <tr>\n","      <th>Angola</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>2.050847</td>\n","    </tr>\n","    <tr>\n","      <th>Australia</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>Austria</th>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Uruguay</th>\n","      <td>2.060606</td>\n","    </tr>\n","    <tr>\n","      <th>Wales</th>\n","      <td>0.666667</td>\n","    </tr>\n","    <tr>\n","      <th>West Germany</th>\n","      <td>2.026316</td>\n","    </tr>\n","    <tr>\n","      <th>Yugoslavia</th>\n","      <td>2.562500</td>\n","    </tr>\n","    <tr>\n","      <th>Zaire</th>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>82 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"L4QazEmqqWed","executionInfo":{"status":"ok","timestamp":1739254766435,"user_tz":-330,"elapsed":114,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"0e2e92d0-5c7d-416d-943a-a9b23df5bc7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       home_score     home_xg  home_penalty  away_score     away_xg  \\\n","count  964.000000  128.000000     35.000000  964.000000  128.000000   \n","mean     1.776971    1.435938      3.285714    1.044606    1.192187   \n","std      1.596676    0.860391      1.226459    1.071233    0.809258   \n","min      0.000000    0.100000      0.000000    0.000000    0.000000   \n","25%      1.000000    0.800000      3.000000    0.000000    0.600000   \n","50%      1.000000    1.300000      3.000000    1.000000    1.000000   \n","75%      3.000000    1.925000      4.000000    2.000000    1.525000   \n","max     10.000000    5.200000      5.000000    7.000000    5.700000   \n","\n","       away_penalty     Attendance         Year  \n","count     35.000000     964.000000   964.000000  \n","mean       3.057143   45693.374481  1989.244813  \n","std        1.136115   22704.131689    24.014409  \n","min        0.000000    2000.000000  1930.000000  \n","25%        2.000000   31800.000000  1974.000000  \n","50%        3.000000   42725.000000  1994.000000  \n","75%        4.000000   60984.500000  2010.000000  \n","max        5.000000  173850.000000  2022.000000  "],"text/html":["\n","  <div id=\"df-aecf9718-6c07-4612-8b34-80c3ffa2dcf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>Attendance</th>\n","      <th>Year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>964.000000</td>\n","      <td>128.000000</td>\n","      <td>35.000000</td>\n","      <td>964.000000</td>\n","      <td>128.000000</td>\n","      <td>35.000000</td>\n","      <td>964.000000</td>\n","      <td>964.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.776971</td>\n","      <td>1.435938</td>\n","      <td>3.285714</td>\n","      <td>1.044606</td>\n","      <td>1.192187</td>\n","      <td>3.057143</td>\n","      <td>45693.374481</td>\n","      <td>1989.244813</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.596676</td>\n","      <td>0.860391</td>\n","      <td>1.226459</td>\n","      <td>1.071233</td>\n","      <td>0.809258</td>\n","      <td>1.136115</td>\n","      <td>22704.131689</td>\n","      <td>24.014409</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2000.000000</td>\n","      <td>1930.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>0.800000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.600000</td>\n","      <td>2.000000</td>\n","      <td>31800.000000</td>\n","      <td>1974.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>1.300000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>42725.000000</td>\n","      <td>1994.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000</td>\n","      <td>1.925000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>1.525000</td>\n","      <td>4.000000</td>\n","      <td>60984.500000</td>\n","      <td>2010.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10.000000</td>\n","      <td>5.200000</td>\n","      <td>5.000000</td>\n","      <td>7.000000</td>\n","      <td>5.700000</td>\n","      <td>5.000000</td>\n","      <td>173850.000000</td>\n","      <td>2022.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aecf9718-6c07-4612-8b34-80c3ffa2dcf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aecf9718-6c07-4612-8b34-80c3ffa2dcf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aecf9718-6c07-4612-8b34-80c3ffa2dcf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6279d299-019b-4144-b022-dc7fb06ed5e1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6279d299-019b-4144-b022-dc7fb06ed5e1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6279d299-019b-4144-b022-dc7fb06ed5e1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"home_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 339.911849731355,\n        \"min\": 0.0,\n        \"max\": 964.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          964.0,\n          1.7769709543568464,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"home_xg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.6943962352742,\n        \"min\": 0.1,\n        \"max\": 128.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.4359375,\n          1.3,\n          128.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"home_penalty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.494427162110764,\n        \"min\": 0.0,\n        \"max\": 35.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          35.0,\n          3.2857142857142856,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"away_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 340.22093080431114,\n        \"min\": 0.0,\n        \"max\": 964.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          964.0,\n          1.0446058091286308,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"away_xg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.74236419440799,\n        \"min\": 0.0,\n        \"max\": 128.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.1921875,\n          1.0,\n          128.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"away_penalty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.5631591664931,\n        \"min\": 0.0,\n        \"max\": 35.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.057142857142857,\n          3.0,\n          35.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attendance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 55122.36797872059,\n        \"min\": 964.0,\n        \"max\": 173850.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          45693.3744813278,\n          42725.0,\n          964.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 735.6722913003581,\n        \"min\": 24.014408621917674,\n        \"max\": 2022.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1989.2448132780082,\n          1994.0,\n          964.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["dg=df.groupby(\"home_team\")[\"home_xg\"]"],"metadata":{"id":"guc3UMQSqaOp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(dg.mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zR9AkaXSqam8","executionInfo":{"status":"ok","timestamp":1739255808833,"user_tz":-330,"elapsed":16,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"32a7c39b-a73b-43d3-b0e7-7156ef6967c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["home_team\n","Algeria              NaN\n","Angola               NaN\n","Argentina       1.842857\n","Australia       0.750000\n","Austria              NaN\n","                  ...   \n","Uruguay         1.240000\n","Wales           0.600000\n","West Germany         NaN\n","Yugoslavia           NaN\n","Zaire                NaN\n","Name: home_xg, Length: 82, dtype: float64\n"]}]},{"cell_type":"code","source":["das = pd.DataFrame({\n","    'Branch':['CSE','ECE','CSE','BBA','BBA'],\n","    'Name':['virat','suresh','prasad','priya','leela'],\n","    'Salary':[10000,20000,15000,25000,13000],\n","})"],"metadata":{"id":"U7bmwImXu_4I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["das"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7jKXCxZKwFD4","executionInfo":{"status":"ok","timestamp":1739256260292,"user_tz":-330,"elapsed":149,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"030f9f74-e948-4384-b153-42ab76444c0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Branch    Name  Salary\n","0    CSE   virat   10000\n","1    ECE  suresh   20000\n","2    CSE  prasad   15000\n","3    BBA   priya   25000\n","4    BBA   leela   13000"],"text/html":["\n","  <div id=\"df-58bb61fc-fae4-4208-9933-2cb8997ee709\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Branch</th>\n","      <th>Name</th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CSE</td>\n","      <td>virat</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ECE</td>\n","      <td>suresh</td>\n","      <td>20000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CSE</td>\n","      <td>prasad</td>\n","      <td>15000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BBA</td>\n","      <td>priya</td>\n","      <td>25000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BBA</td>\n","      <td>leela</td>\n","      <td>13000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58bb61fc-fae4-4208-9933-2cb8997ee709')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-58bb61fc-fae4-4208-9933-2cb8997ee709 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-58bb61fc-fae4-4208-9933-2cb8997ee709');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-39ed7ade-c5fe-4dd8-aa62-665ac916be07\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39ed7ade-c5fe-4dd8-aa62-665ac916be07')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-39ed7ade-c5fe-4dd8-aa62-665ac916be07 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_42211135-86a9-49c7-a4b2-c4d93cf84461\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('das')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_42211135-86a9-49c7-a4b2-c4d93cf84461 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('das');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"das","summary":"{\n  \"name\": \"das\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Branch\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"CSE\",\n          \"ECE\",\n          \"BBA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"suresh\",\n          \"leela\",\n          \"prasad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5941,\n        \"min\": 10000,\n        \"max\": 25000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          20000,\n          13000,\n          15000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["sv = das.groupby('Branch')['Salary']"],"metadata":{"id":"9xEZ01MEwi7y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(sv.mean())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rbzEPqgzwkKj","executionInfo":{"status":"ok","timestamp":1739256465097,"user_tz":-330,"elapsed":53,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"fcb58a6f-75e8-4f37-f795-9d278edc4d96"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Branch\n","BBA    19000.0\n","CSE    12500.0\n","ECE    20000.0\n","Name: Salary, dtype: float64\n"]}]},{"cell_type":"code","source":["das.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"wc1K8da1xkIQ","executionInfo":{"status":"ok","timestamp":1739256657921,"user_tz":-330,"elapsed":105,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"f9cd6cf8-40a7-4ba3-9208-c983817431c0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Salary\n","count      5.000000\n","mean   16600.000000\n","std     5941.380311\n","min    10000.000000\n","25%    13000.000000\n","50%    15000.000000\n","75%    20000.000000\n","max    25000.000000"],"text/html":["\n","  <div id=\"df-1352075c-8a7b-4a80-ae0f-5a5fe31dfea9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Salary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>16600.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5941.380311</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>13000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>15000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>20000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>25000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1352075c-8a7b-4a80-ae0f-5a5fe31dfea9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1352075c-8a7b-4a80-ae0f-5a5fe31dfea9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1352075c-8a7b-4a80-ae0f-5a5fe31dfea9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b916161c-b694-4435-a302-ce170515ae0a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b916161c-b694-4435-a302-ce170515ae0a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b916161c-b694-4435-a302-ce170515ae0a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"das\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Salary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7904.38599228828,\n        \"min\": 5.0,\n        \"max\": 25000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16600.0,\n          15000.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["sv.agg(['mean','max','min'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":263},"id":"PDkgyZh0xoA_","executionInfo":{"status":"error","timestamp":1739423548374,"user_tz":-330,"elapsed":749,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"4cf85aeb-f113-4e10-d4cc-60d09f9d4626","collapsed":true},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'sv' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-28-7162abdbf68a>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0magg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'mean'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'max'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'min'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sv' is not defined"]}]},{"cell_type":"code","source":["sv2 = das.groupby(['Branch','Name'])['Salary']"],"metadata":{"id":"asefB8aGx6Rd","colab":{"base_uri":"https://localhost:8080/","height":280},"collapsed":true,"executionInfo":{"status":"error","timestamp":1739423473887,"user_tz":-330,"elapsed":636,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"8568b4ac-c4fa-46b5-a7f7-475b9c346ac6"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'das' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-26-f5772e6f7d68>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msv2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgroupby\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Branch'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'Name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Salary'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'das' is not defined"]}]},{"cell_type":"code","source":["sv2.max()"],"metadata":{"id":"OxIG6tOIyWYa","executionInfo":{"status":"error","timestamp":1739422467422,"user_tz":-330,"elapsed":439,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"cbafbfdd-db2e-4809-ad21-54c97442e5db","colab":{"base_uri":"https://localhost:8080/","height":245},"collapsed":true},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'sv2' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-3ab64f868d1d>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msv2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sv2' is not defined"]}]},{"cell_type":"code","source":["import random"],"metadata":{"id":"tFigAhS9qIjS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["age = []\n","height = []\n","weight = []"],"metadata":{"id":"dXVFvySbqQiN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"uSZLkO2IqkeB","executionInfo":{"status":"ok","timestamp":1739422586561,"user_tz":-330,"elapsed":489,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"6c411cbc-9dd5-4802-b946-3af981be61d2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         home_team away_team  home_score  home_xg  home_penalty  away_score  \\\n","0        Argentina    France           3      3.3           4.0           3   \n","1          Croatia   Morocco           2      0.7           NaN           1   \n","2           France   Morocco           2      2.0           NaN           0   \n","3        Argentina   Croatia           3      2.3           NaN           0   \n","4          Morocco  Portugal           1      1.4           NaN           0   \n","..             ...       ...         ...      ...           ...         ...   \n","959      Argentina    France           1      NaN           NaN           0   \n","960     Yugoslavia    Brazil           2      NaN           NaN           1   \n","961        Romania      Peru           3      NaN           NaN           1   \n","962  United States   Belgium           3      NaN           NaN           0   \n","963         France    Mexico           4      NaN           NaN           1   \n","\n","     away_xg  away_penalty      home_manager          home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni          Lionel Messi  ...   \n","1        1.2           NaN      Zlatko Dalić           Luka Modrić  ...   \n","2        0.9           NaN  Didier Deschamps           Hugo Lloris  ...   \n","3        0.5           NaN    Lionel Scaloni          Lionel Messi  ...   \n","4        0.9           NaN   Hoalid Regragui          Romain Saïss  ...   \n","..       ...           ...               ...                   ...  ...   \n","959      NaN           NaN  Francisco Olazar       Manuel Ferreira  ...   \n","960      NaN           NaN   Bosko Simonovic       Milutin Ivković  ...   \n","961      NaN           NaN     Octav Luchide          Emerich Vogl  ...   \n","962      NaN           NaN        Bob Millar            Tom Florie  ...   \n","963      NaN           NaN     Raoul Caudron  Alexandre Villaplane  ...   \n","\n","    home_penalty_shootout_miss_long  \\\n","0                               NaN   \n","1                               NaN   \n","2                               NaN   \n","3                               NaN   \n","4                               NaN   \n","..                              ...   \n","959                             NaN   \n","960                             NaN   \n","961                             NaN   \n","962                             NaN   \n","963                             NaN   \n","\n","                       away_penalty_shootout_miss_long  home_red_card  \\\n","0    ['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...            NaN   \n","1                                                  NaN            NaN   \n","2                                                  NaN            NaN   \n","3                                                  NaN            NaN   \n","4                                                  NaN            NaN   \n","..                                                 ...            ...   \n","959                                                NaN            NaN   \n","960                                                NaN            NaN   \n","961                                                NaN            NaN   \n","962                                                NaN            NaN   \n","963                                                NaN            NaN   \n","\n","            away_red_card   home_yellow_red_card away_yellow_red_card  \\\n","0                     NaN                    NaN                  NaN   \n","1                     NaN                    NaN                  NaN   \n","2                     NaN                    NaN                  NaN   \n","3                     NaN                    NaN                  NaN   \n","4                     NaN  Walid Cheddira · 90+3                  NaN   \n","..                    ...                    ...                  ...   \n","959                   NaN                    NaN                  NaN   \n","960                   NaN                    NaN                  NaN   \n","961  Plácido Galindo · 70                    NaN                  NaN   \n","962                   NaN                    NaN                  NaN   \n","963                   NaN                    NaN                  NaN   \n","\n","                                 home_yellow_card_long  \\\n","0    ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","1                                                  NaN   \n","2                                                  NaN   \n","3    ['68&rsquor;|2:0|Cristian Romero', '71&rsquor;...   \n","4    ['70&rsquor;|1:0|Achraf Dari', '90+1&rsquor;|1...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","1    ['69&rsquor;|2:1|Azzedine Ounahi', '84&rsquor;...   \n","2                    ['27&rsquor;|1:0|Sofiane Boufal']   \n","3    ['32&rsquor;|0:0|Mateo Kovačić', '32&rsquor;|0...   \n","4                           ['87&rsquor;|1:0|Vitinha']   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","1    ['61&rsquor;|2:1|Nikola Vlašić|for Andrej Kram...   \n","2    ['65&rsquor;|1:0|Marcus Thuram|for Olivier Gir...   \n","3    ['62&rsquor;|2:0|Lisandro Martínez|for Leandro...   \n","4    ['57&rsquor;|1:0|Achraf Dari|for Romain Saïss'...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               away_substitute_in_long  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...  \n","1    ['46&rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...  \n","2    ['21&rsquor;|1:0|Selim Amallah|for Romain Saïs...  \n","3    ['46&rsquor;|2:0|Mislav Oršić|for Borna Sosa',...  \n","4    ['51&rsquor;|1:0|João Cancelo|for Raphaël Guer...  \n","..                                                 ...  \n","959                                                NaN  \n","960                                                NaN  \n","961                                                NaN  \n","962                                                NaN  \n","963                                                NaN  \n","\n","[964 rows x 44 columns]"],"text/html":["\n","  <div id=\"df-e8954bb9-e58c-4162-8f57-5c0eba0299ac\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>home_penalty_shootout_miss_long</th>\n","      <th>away_penalty_shootout_miss_long</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Croatia</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>NaN</td>\n","      <td>Zlatko Dalić</td>\n","      <td>Luka Modrić</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['69&amp;rsquor;|2:1|Azzedine Ounahi', '84&amp;rsquor;...</td>\n","      <td>['61&amp;rsquor;|2:1|Nikola Vlašić|for Andrej Kram...</td>\n","      <td>['46&amp;rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>France</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Didier Deschamps</td>\n","      <td>Hugo Lloris</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['27&amp;rsquor;|1:0|Sofiane Boufal']</td>\n","      <td>['65&amp;rsquor;|1:0|Marcus Thuram|for Olivier Gir...</td>\n","      <td>['21&amp;rsquor;|1:0|Selim Amallah|for Romain Saïs...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Argentina</td>\n","      <td>Croatia</td>\n","      <td>3</td>\n","      <td>2.3</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['68&amp;rsquor;|2:0|Cristian Romero', '71&amp;rsquor;...</td>\n","      <td>['32&amp;rsquor;|0:0|Mateo Kovačić', '32&amp;rsquor;|0...</td>\n","      <td>['62&amp;rsquor;|2:0|Lisandro Martínez|for Leandro...</td>\n","      <td>['46&amp;rsquor;|2:0|Mislav Oršić|for Borna Sosa',...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Morocco</td>\n","      <td>Portugal</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Hoalid Regragui</td>\n","      <td>Romain Saïss</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Walid Cheddira · 90+3</td>\n","      <td>NaN</td>\n","      <td>['70&amp;rsquor;|1:0|Achraf Dari', '90+1&amp;rsquor;|1...</td>\n","      <td>['87&amp;rsquor;|1:0|Vitinha']</td>\n","      <td>['57&amp;rsquor;|1:0|Achraf Dari|for Romain Saïss'...</td>\n","      <td>['51&amp;rsquor;|1:0|João Cancelo|for Raphaël Guer...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Francisco Olazar</td>\n","      <td>Manuel Ferreira</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>Yugoslavia</td>\n","      <td>Brazil</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bosko Simonovic</td>\n","      <td>Milutin Ivković</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>Romania</td>\n","      <td>Peru</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Octav Luchide</td>\n","      <td>Emerich Vogl</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Plácido Galindo · 70</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>United States</td>\n","      <td>Belgium</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bob Millar</td>\n","      <td>Tom Florie</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>963</th>\n","      <td>France</td>\n","      <td>Mexico</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Raoul Caudron</td>\n","      <td>Alexandre Villaplane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>964 rows × 44 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8954bb9-e58c-4162-8f57-5c0eba0299ac')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e8954bb9-e58c-4162-8f57-5c0eba0299ac button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e8954bb9-e58c-4162-8f57-5c0eba0299ac');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0ff3767-f700-42a4-817f-3239f12efab8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0ff3767-f700-42a4-817f-3239f12efab8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0ff3767-f700-42a4-817f-3239f12efab8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9271b9d6-b78f-49fb-9943-38b3d7caf058\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9271b9d6-b78f-49fb-9943-38b3d7caf058 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Ss7G3AUqmPU","executionInfo":{"status":"ok","timestamp":1739422627611,"user_tz":-330,"elapsed":449,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"baf5a47f-4d0e-4e1a-bdb3-5680bd71a0db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(964, 44)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["[age.append(random.randint(18,40)) for _ in range(964)]\n","print(f\"Age is now having {len(age)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f28NHV1Bqv7H","executionInfo":{"status":"ok","timestamp":1739422762374,"user_tz":-330,"elapsed":477,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"f4351631-786e-47da-89f6-b3fb096a3ced"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Age is now having 964\n"]}]},{"cell_type":"code","source":["age"],"metadata":{"collapsed":true,"colab":{"base_uri":"https://localhost:8080/"},"id":"JrLWWNu1rQ2d","executionInfo":{"status":"ok","timestamp":1739422773776,"user_tz":-330,"elapsed":543,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"0c8ae35c-dc73-4c36-cd62-c94d7e5b9bf0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[22,\n"," 35,\n"," 30,\n"," 38,\n"," 38,\n"," 35,\n"," 33,\n"," 21,\n"," 28,\n"," 37,\n"," 29,\n"," 28,\n"," 23,\n"," 20,\n"," 24,\n"," 25,\n"," 27,\n"," 24,\n"," 36,\n"," 18,\n"," 27,\n"," 22,\n"," 23,\n"," 19,\n"," 24,\n"," 21,\n"," 36,\n"," 27,\n"," 40,\n"," 29,\n"," 25,\n"," 40,\n"," 19,\n"," 28,\n"," 34,\n"," 30,\n"," 38,\n"," 27,\n"," 29,\n"," 32,\n"," 36,\n"," 33,\n"," 23,\n"," 35,\n"," 27,\n"," 24,\n"," 20,\n"," 23,\n"," 21,\n"," 20,\n"," 24,\n"," 29,\n"," 35,\n"," 30,\n"," 23,\n"," 37,\n"," 30,\n"," 25,\n"," 23,\n"," 24,\n"," 37,\n"," 35,\n"," 22,\n"," 37,\n"," 37,\n"," 23,\n"," 34,\n"," 40,\n"," 34,\n"," 33,\n"," 35,\n"," 28,\n"," 27,\n"," 39,\n"," 20,\n"," 36,\n"," 33,\n"," 25,\n"," 27,\n"," 30,\n"," 35,\n"," 37,\n"," 38,\n"," 30,\n"," 32,\n"," 21,\n"," 35,\n"," 18,\n"," 31,\n"," 23,\n"," 27,\n"," 29,\n"," 37,\n"," 33,\n"," 36,\n"," 27,\n"," 30,\n"," 26,\n"," 20,\n"," 40,\n"," 29,\n"," 19,\n"," 34,\n"," 36,\n"," 37,\n"," 38,\n"," 35,\n"," 31,\n"," 33,\n"," 31,\n"," 36,\n"," 39,\n"," 29,\n"," 26,\n"," 18,\n"," 35,\n"," 23,\n"," 26,\n"," 26,\n"," 20,\n"," 30,\n"," 23,\n"," 39,\n"," 38,\n"," 37,\n"," 36,\n"," 40,\n"," 22,\n"," 29,\n"," 35,\n"," 40,\n"," 24,\n"," 29,\n"," 40,\n"," 26,\n"," 18,\n"," 34,\n"," 22,\n"," 26,\n"," 20,\n"," 22,\n"," 32,\n"," 36,\n"," 22,\n"," 25,\n"," 35,\n"," 38,\n"," 33,\n"," 23,\n"," 27,\n"," 31,\n"," 39,\n"," 20,\n"," 35,\n"," 37,\n"," 35,\n"," 28,\n"," 31,\n"," 40,\n"," 20,\n"," 20,\n"," 32,\n"," 37,\n"," 38,\n"," 38,\n"," 29,\n"," 30,\n"," 32,\n"," 29,\n"," 30,\n"," 38,\n"," 33,\n"," 27,\n"," 36,\n"," 39,\n"," 26,\n"," 21,\n"," 36,\n"," 40,\n"," 29,\n"," 33,\n"," 37,\n"," 24,\n"," 29,\n"," 40,\n"," 40,\n"," 39,\n"," 25,\n"," 19,\n"," 40,\n"," 27,\n"," 33,\n"," 32,\n"," 35,\n"," 26,\n"," 20,\n"," 26,\n"," 30,\n"," 19,\n"," 27,\n"," 31,\n"," 24,\n"," 28,\n"," 34,\n"," 27,\n"," 32,\n"," 24,\n"," 24,\n"," 33,\n"," 29,\n"," 34,\n"," 21,\n"," 22,\n"," 26,\n"," 19,\n"," 21,\n"," 27,\n"," 24,\n"," 28,\n"," 26,\n"," 32,\n"," 27,\n"," 31,\n"," 36,\n"," 37,\n"," 32,\n"," 38,\n"," 38,\n"," 21,\n"," 25,\n"," 35,\n"," 18,\n"," 33,\n"," 25,\n"," 29,\n"," 26,\n"," 19,\n"," 32,\n"," 31,\n"," 39,\n"," 27,\n"," 40,\n"," 32,\n"," 31,\n"," 31,\n"," 19,\n"," 22,\n"," 23,\n"," 19,\n"," 23,\n"," 20,\n"," 24,\n"," 38,\n"," 31,\n"," 21,\n"," 36,\n"," 21,\n"," 40,\n"," 22,\n"," 18,\n"," 22,\n"," 25,\n"," 30,\n"," 29,\n"," 39,\n"," 19,\n"," 33,\n"," 32,\n"," 19,\n"," 39,\n"," 22,\n"," 39,\n"," 26,\n"," 18,\n"," 31,\n"," 20,\n"," 27,\n"," 21,\n"," 37,\n"," 38,\n"," 18,\n"," 38,\n"," 38,\n"," 28,\n"," 27,\n"," 31,\n"," 36,\n"," 25,\n"," 36,\n"," 36,\n"," 40,\n"," 36,\n"," 27,\n"," 21,\n"," 34,\n"," 27,\n"," 34,\n"," 19,\n"," 29,\n"," 34,\n"," 34,\n"," 22,\n"," 23,\n"," 36,\n"," 29,\n"," 19,\n"," 21,\n"," 39,\n"," 26,\n"," 31,\n"," 21,\n"," 35,\n"," 22,\n"," 23,\n"," 18,\n"," 39,\n"," 34,\n"," 22,\n"," 21,\n"," 30,\n"," 22,\n"," 22,\n"," 37,\n"," 37,\n"," 21,\n"," 20,\n"," 40,\n"," 37,\n"," 40,\n"," 35,\n"," 20,\n"," 31,\n"," 26,\n"," 38,\n"," 37,\n"," 18,\n"," 34,\n"," 39,\n"," 26,\n"," 29,\n"," 18,\n"," 32,\n"," 31,\n"," 40,\n"," 26,\n"," 28,\n"," 26,\n"," 32,\n"," 22,\n"," 29,\n"," 28,\n"," 27,\n"," 34,\n"," 22,\n"," 28,\n"," 28,\n"," 30,\n"," 28,\n"," 18,\n"," 25,\n"," 22,\n"," 23,\n"," 26,\n"," 30,\n"," 35,\n"," 18,\n"," 36,\n"," 37,\n"," 24,\n"," 27,\n"," 35,\n"," 28,\n"," 36,\n"," 33,\n"," 29,\n"," 18,\n"," 25,\n"," 38,\n"," 20,\n"," 39,\n"," 26,\n"," 27,\n"," 33,\n"," 35,\n"," 31,\n"," 32,\n"," 32,\n"," 24,\n"," 25,\n"," 30,\n"," 30,\n"," 24,\n"," 25,\n"," 23,\n"," 31,\n"," 33,\n"," 39,\n"," 36,\n"," 36,\n"," 20,\n"," 22,\n"," 31,\n"," 30,\n"," 35,\n"," 22,\n"," 25,\n"," 25,\n"," 37,\n"," 21,\n"," 21,\n"," 23,\n"," 26,\n"," 23,\n"," 27,\n"," 38,\n"," 40,\n"," 32,\n"," 39,\n"," 35,\n"," 21,\n"," 18,\n"," 35,\n"," 34,\n"," 24,\n"," 38,\n"," 34,\n"," 32,\n"," 38,\n"," 26,\n"," 21,\n"," 23,\n"," 38,\n"," 37,\n"," 19,\n"," 39,\n"," 37,\n"," 22,\n"," 28,\n"," 21,\n"," 29,\n"," 29,\n"," 25,\n"," 36,\n"," 29,\n"," 38,\n"," 35,\n"," 30,\n"," 18,\n"," 22,\n"," 38,\n"," 32,\n"," 22,\n"," 18,\n"," 23,\n"," 37,\n"," 25,\n"," 35,\n"," 24,\n"," 32,\n"," 38,\n"," 36,\n"," 27,\n"," 31,\n"," 28,\n"," 30,\n"," 30,\n"," 38,\n"," 32,\n"," 27,\n"," 25,\n"," 31,\n"," 27,\n"," 22,\n"," 39,\n"," 29,\n"," 29,\n"," 34,\n"," 35,\n"," 19,\n"," 36,\n"," 18,\n"," 28,\n"," 30,\n"," 33,\n"," 25,\n"," 30,\n"," 23,\n"," 40,\n"," 35,\n"," 20,\n"," 27,\n"," 38,\n"," 38,\n"," 31,\n"," 20,\n"," 36,\n"," 34,\n"," 18,\n"," 21,\n"," 18,\n"," 23,\n"," 34,\n"," 28,\n"," 27,\n"," 23,\n"," 36,\n"," 25,\n"," 32,\n"," 22,\n"," 31,\n"," 29,\n"," 37,\n"," 30,\n"," 36,\n"," 33,\n"," 40,\n"," 23,\n"," 37,\n"," 36,\n"," 32,\n"," 19,\n"," 28,\n"," 18,\n"," 27,\n"," 23,\n"," 27,\n"," 19,\n"," 34,\n"," 28,\n"," 35,\n"," 20,\n"," 25,\n"," 40,\n"," 24,\n"," 31,\n"," 34,\n"," 21,\n"," 22,\n"," 26,\n"," 25,\n"," 37,\n"," 25,\n"," 25,\n"," 24,\n"," 20,\n"," 25,\n"," 32,\n"," 24,\n"," 33,\n"," 38,\n"," 23,\n"," 27,\n"," 19,\n"," 21,\n"," 32,\n"," 25,\n"," 26,\n"," 26,\n"," 30,\n"," 24,\n"," 22,\n"," 39,\n"," 35,\n"," 30,\n"," 32,\n"," 20,\n"," 26,\n"," 27,\n"," 27,\n"," 18,\n"," 27,\n"," 39,\n"," 19,\n"," 25,\n"," 29,\n"," 39,\n"," 36,\n"," 18,\n"," 28,\n"," 32,\n"," 39,\n"," 23,\n"," 30,\n"," 20,\n"," 25,\n"," 33,\n"," 33,\n"," 23,\n"," 39,\n"," 39,\n"," 24,\n"," 18,\n"," 40,\n"," 31,\n"," 38,\n"," 22,\n"," 24,\n"," 19,\n"," 39,\n"," 25,\n"," 37,\n"," 24,\n"," 37,\n"," 38,\n"," 25,\n"," 33,\n"," 34,\n"," 23,\n"," 23,\n"," 37,\n"," 29,\n"," 32,\n"," 29,\n"," 26,\n"," 34,\n"," 34,\n"," 20,\n"," 26,\n"," 40,\n"," 28,\n"," 22,\n"," 22,\n"," 20,\n"," 37,\n"," 21,\n"," 25,\n"," 25,\n"," 30,\n"," 18,\n"," 23,\n"," 38,\n"," 23,\n"," 24,\n"," 35,\n"," 30,\n"," 25,\n"," 39,\n"," 35,\n"," 39,\n"," 40,\n"," 18,\n"," 18,\n"," 20,\n"," 23,\n"," 30,\n"," 28,\n"," 39,\n"," 39,\n"," 27,\n"," 29,\n"," 27,\n"," 37,\n"," 30,\n"," 25,\n"," 23,\n"," 35,\n"," 30,\n"," 26,\n"," 34,\n"," 20,\n"," 19,\n"," 21,\n"," 20,\n"," 28,\n"," 28,\n"," 39,\n"," 39,\n"," 21,\n"," 26,\n"," 29,\n"," 26,\n"," 34,\n"," 33,\n"," 36,\n"," 23,\n"," 24,\n"," 39,\n"," 37,\n"," 33,\n"," 39,\n"," 30,\n"," 28,\n"," 35,\n"," 27,\n"," 23,\n"," 28,\n"," 40,\n"," 23,\n"," 22,\n"," 28,\n"," 29,\n"," 20,\n"," 32,\n"," 29,\n"," 26,\n"," 28,\n"," 21,\n"," 25,\n"," 39,\n"," 19,\n"," 39,\n"," 18,\n"," 21,\n"," 25,\n"," 31,\n"," 31,\n"," 39,\n"," 30,\n"," 39,\n"," 23,\n"," 32,\n"," 26,\n"," 32,\n"," 29,\n"," 20,\n"," 39,\n"," 36,\n"," 18,\n"," 39,\n"," 32,\n"," 32,\n"," 37,\n"," 23,\n"," 20,\n"," 37,\n"," 20,\n"," 30,\n"," 27,\n"," 40,\n"," 34,\n"," 32,\n"," 26,\n"," 32,\n"," 32,\n"," 19,\n"," 31,\n"," 36,\n"," 22,\n"," 26,\n"," 18,\n"," 35,\n"," 18,\n"," 24,\n"," 36,\n"," 40,\n"," 19,\n"," 28,\n"," 38,\n"," 40,\n"," 36,\n"," 25,\n"," 26,\n"," 19,\n"," 38,\n"," 20,\n"," 27,\n"," 22,\n"," 37,\n"," 35,\n"," 30,\n"," 28,\n"," 20,\n"," 18,\n"," 36,\n"," 33,\n"," 34,\n"," 24,\n"," 27,\n"," 20,\n"," 31,\n"," 32,\n"," 38,\n"," 32,\n"," 25,\n"," 32,\n"," 32,\n"," 32,\n"," 33,\n"," 38,\n"," 21,\n"," 40,\n"," 25,\n"," 31,\n"," 29,\n"," 33,\n"," 28,\n"," 36,\n"," 36,\n"," 19,\n"," 20,\n"," 25,\n"," 25,\n"," 18,\n"," 34,\n"," 19,\n"," 36,\n"," 23,\n"," 40,\n"," 33,\n"," 30,\n"," 33,\n"," 37,\n"," 21,\n"," 39,\n"," 26,\n"," 39,\n"," 31,\n"," 33,\n"," 20,\n"," 21,\n"," 38,\n"," 26,\n"," 26,\n"," 36,\n"," 29,\n"," 32,\n"," 19,\n"," 39,\n"," 31,\n"," 35,\n"," 39,\n"," 21,\n"," 32,\n"," 38,\n"," 30,\n"," 31,\n"," 30,\n"," 25,\n"," 32,\n"," 25,\n"," 37,\n"," 21,\n"," 39,\n"," 30,\n"," 38,\n"," 27,\n"," 22,\n"," 39,\n"," 39,\n"," 39,\n"," 28,\n"," 26,\n"," 18,\n"," 19,\n"," 28,\n"," 34,\n"," 36,\n"," 19,\n"," 36,\n"," 25,\n"," 28,\n"," 34,\n"," 30,\n"," 26,\n"," 39,\n"," 34,\n"," 28,\n"," 31,\n"," 24,\n"," 27,\n"," 39,\n"," 40,\n"," 21,\n"," 26,\n"," 31,\n"," 31,\n"," 20,\n"," 39,\n"," 29,\n"," 31,\n"," 18,\n"," 26,\n"," 31,\n"," 23,\n"," 37,\n"," 26,\n"," 35,\n"," 23,\n"," 37,\n"," 19,\n"," 21,\n"," 22,\n"," 24,\n"," 19,\n"," 39,\n"," 28,\n"," 34,\n"," 19,\n"," 30,\n"," 34,\n"," 30,\n"," 28,\n"," 35,\n"," 29,\n"," 19,\n"," 33,\n"," 30,\n"," 23,\n"," 24,\n"," 25,\n"," 29,\n"," 21,\n"," 18,\n"," 32,\n"," 28,\n"," 23,\n"," 39,\n"," 38,\n"," 30,\n"," 21,\n"," 39,\n"," 34,\n"," 36,\n"," 32,\n"," 30,\n"," 19,\n"," 36,\n"," 39,\n"," 37,\n"," 31,\n"," 23,\n"," 39,\n"," 37,\n"," 37,\n"," 31,\n"," 21,\n"," 30,\n"," 35,\n"," 23,\n"," 28,\n"," 23,\n"," 34,\n"," 31,\n"," 32,\n"," 25,\n"," 19,\n"," 32,\n"," 38,\n"," 25,\n"," 40,\n"," 38,\n"," 35,\n"," 21,\n"," 36,\n"," 33,\n"," 24,\n"," 26,\n"," 26,\n"," 29,\n"," 36,\n"," 29,\n"," 40,\n"," 18,\n"," 21,\n"," 26,\n"," 39,\n"," 33,\n"," 31,\n"," 34,\n"," 22,\n"," 22,\n"," 32,\n"," 34,\n"," 34]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["#Adding a new column to the DFramr\n","#Syntax : df['NewcolumnName] = List/series of elements"],"metadata":{"id":"W6XsrVbarUkN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['YearsofExperince'] = age"],"metadata":{"id":"VNuxmjoVrthg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"-VSiKjj6r9l7","executionInfo":{"status":"ok","timestamp":1739422952722,"user_tz":-330,"elapsed":507,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"1b7196af-f85e-45b9-e475-eb68a8d568ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         home_team away_team  home_score  home_xg  home_penalty  away_score  \\\n","0        Argentina    France           3      3.3           4.0           3   \n","1          Croatia   Morocco           2      0.7           NaN           1   \n","2           France   Morocco           2      2.0           NaN           0   \n","3        Argentina   Croatia           3      2.3           NaN           0   \n","4          Morocco  Portugal           1      1.4           NaN           0   \n","..             ...       ...         ...      ...           ...         ...   \n","959      Argentina    France           1      NaN           NaN           0   \n","960     Yugoslavia    Brazil           2      NaN           NaN           1   \n","961        Romania      Peru           3      NaN           NaN           1   \n","962  United States   Belgium           3      NaN           NaN           0   \n","963         France    Mexico           4      NaN           NaN           1   \n","\n","     away_xg  away_penalty      home_manager          home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni          Lionel Messi  ...   \n","1        1.2           NaN      Zlatko Dalić           Luka Modrić  ...   \n","2        0.9           NaN  Didier Deschamps           Hugo Lloris  ...   \n","3        0.5           NaN    Lionel Scaloni          Lionel Messi  ...   \n","4        0.9           NaN   Hoalid Regragui          Romain Saïss  ...   \n","..       ...           ...               ...                   ...  ...   \n","959      NaN           NaN  Francisco Olazar       Manuel Ferreira  ...   \n","960      NaN           NaN   Bosko Simonovic       Milutin Ivković  ...   \n","961      NaN           NaN     Octav Luchide          Emerich Vogl  ...   \n","962      NaN           NaN        Bob Millar            Tom Florie  ...   \n","963      NaN           NaN     Raoul Caudron  Alexandre Villaplane  ...   \n","\n","                       away_penalty_shootout_miss_long home_red_card  \\\n","0    ['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...           NaN   \n","1                                                  NaN           NaN   \n","2                                                  NaN           NaN   \n","3                                                  NaN           NaN   \n","4                                                  NaN           NaN   \n","..                                                 ...           ...   \n","959                                                NaN           NaN   \n","960                                                NaN           NaN   \n","961                                                NaN           NaN   \n","962                                                NaN           NaN   \n","963                                                NaN           NaN   \n","\n","            away_red_card   home_yellow_red_card away_yellow_red_card  \\\n","0                     NaN                    NaN                  NaN   \n","1                     NaN                    NaN                  NaN   \n","2                     NaN                    NaN                  NaN   \n","3                     NaN                    NaN                  NaN   \n","4                     NaN  Walid Cheddira · 90+3                  NaN   \n","..                    ...                    ...                  ...   \n","959                   NaN                    NaN                  NaN   \n","960                   NaN                    NaN                  NaN   \n","961  Plácido Galindo · 70                    NaN                  NaN   \n","962                   NaN                    NaN                  NaN   \n","963                   NaN                    NaN                  NaN   \n","\n","                                 home_yellow_card_long  \\\n","0    ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","1                                                  NaN   \n","2                                                  NaN   \n","3    ['68&rsquor;|2:0|Cristian Romero', '71&rsquor;...   \n","4    ['70&rsquor;|1:0|Achraf Dari', '90+1&rsquor;|1...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","1    ['69&rsquor;|2:1|Azzedine Ounahi', '84&rsquor;...   \n","2                    ['27&rsquor;|1:0|Sofiane Boufal']   \n","3    ['32&rsquor;|0:0|Mateo Kovačić', '32&rsquor;|0...   \n","4                           ['87&rsquor;|1:0|Vitinha']   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","1    ['61&rsquor;|2:1|Nikola Vlašić|for Andrej Kram...   \n","2    ['65&rsquor;|1:0|Marcus Thuram|for Olivier Gir...   \n","3    ['62&rsquor;|2:0|Lisandro Martínez|for Leandro...   \n","4    ['57&rsquor;|1:0|Achraf Dari|for Romain Saïss'...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               away_substitute_in_long YearsofExperince  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...               22  \n","1    ['46&rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...               35  \n","2    ['21&rsquor;|1:0|Selim Amallah|for Romain Saïs...               30  \n","3    ['46&rsquor;|2:0|Mislav Oršić|for Borna Sosa',...               38  \n","4    ['51&rsquor;|1:0|João Cancelo|for Raphaël Guer...               38  \n","..                                                 ...              ...  \n","959                                                NaN               22  \n","960                                                NaN               22  \n","961                                                NaN               32  \n","962                                                NaN               34  \n","963                                                NaN               34  \n","\n","[964 rows x 45 columns]"],"text/html":["\n","  <div id=\"df-e4b0f136-20e8-4851-88ed-e9ce95ac4c55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>away_penalty_shootout_miss_long</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","      <th>YearsofExperince</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>['3|1:1|Kingsley Coman', '5|2:1|Aurélien Tchou...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Croatia</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>NaN</td>\n","      <td>Zlatko Dalić</td>\n","      <td>Luka Modrić</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['69&amp;rsquor;|2:1|Azzedine Ounahi', '84&amp;rsquor;...</td>\n","      <td>['61&amp;rsquor;|2:1|Nikola Vlašić|for Andrej Kram...</td>\n","      <td>['46&amp;rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>France</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Didier Deschamps</td>\n","      <td>Hugo Lloris</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['27&amp;rsquor;|1:0|Sofiane Boufal']</td>\n","      <td>['65&amp;rsquor;|1:0|Marcus Thuram|for Olivier Gir...</td>\n","      <td>['21&amp;rsquor;|1:0|Selim Amallah|for Romain Saïs...</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Argentina</td>\n","      <td>Croatia</td>\n","      <td>3</td>\n","      <td>2.3</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['68&amp;rsquor;|2:0|Cristian Romero', '71&amp;rsquor;...</td>\n","      <td>['32&amp;rsquor;|0:0|Mateo Kovačić', '32&amp;rsquor;|0...</td>\n","      <td>['62&amp;rsquor;|2:0|Lisandro Martínez|for Leandro...</td>\n","      <td>['46&amp;rsquor;|2:0|Mislav Oršić|for Borna Sosa',...</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Morocco</td>\n","      <td>Portugal</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Hoalid Regragui</td>\n","      <td>Romain Saïss</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Walid Cheddira · 90+3</td>\n","      <td>NaN</td>\n","      <td>['70&amp;rsquor;|1:0|Achraf Dari', '90+1&amp;rsquor;|1...</td>\n","      <td>['87&amp;rsquor;|1:0|Vitinha']</td>\n","      <td>['57&amp;rsquor;|1:0|Achraf Dari|for Romain Saïss'...</td>\n","      <td>['51&amp;rsquor;|1:0|João Cancelo|for Raphaël Guer...</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Francisco Olazar</td>\n","      <td>Manuel Ferreira</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>Yugoslavia</td>\n","      <td>Brazil</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bosko Simonovic</td>\n","      <td>Milutin Ivković</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>Romania</td>\n","      <td>Peru</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Octav Luchide</td>\n","      <td>Emerich Vogl</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Plácido Galindo · 70</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>United States</td>\n","      <td>Belgium</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bob Millar</td>\n","      <td>Tom Florie</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>963</th>\n","      <td>France</td>\n","      <td>Mexico</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Raoul Caudron</td>\n","      <td>Alexandre Villaplane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>964 rows × 45 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4b0f136-20e8-4851-88ed-e9ce95ac4c55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4b0f136-20e8-4851-88ed-e9ce95ac4c55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4b0f136-20e8-4851-88ed-e9ce95ac4c55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e0ce5448-6f92-45c8-89f9-4a3a1ea6332b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0ce5448-6f92-45c8-89f9-4a3a1ea6332b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e0ce5448-6f92-45c8-89f9-4a3a1ea6332b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5667628f-4be2-4bf9-aa7c-4a5b0eb9241a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5667628f-4be2-4bf9-aa7c-4a5b0eb9241a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df['ASP'] = df['YearsofExperince'] - df['home_score']"],"metadata":{"id":"FDr_6x1dslot"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rlbsB79Otk5G","executionInfo":{"status":"ok","timestamp":1739423380161,"user_tz":-330,"elapsed":1081,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"48514349-cc30-4323-8bc8-eb29fcbe9bc1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(964, 46)"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"kJjfzBTgtqEs","executionInfo":{"status":"ok","timestamp":1739423396178,"user_tz":-330,"elapsed":599,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"28ad5971-ba54-4e0b-9a6b-ec04744b350b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         home_team away_team  home_score  home_xg  home_penalty  away_score  \\\n","0        Argentina    France           3      3.3           4.0           3   \n","1          Croatia   Morocco           2      0.7           NaN           1   \n","2           France   Morocco           2      2.0           NaN           0   \n","3        Argentina   Croatia           3      2.3           NaN           0   \n","4          Morocco  Portugal           1      1.4           NaN           0   \n","..             ...       ...         ...      ...           ...         ...   \n","959      Argentina    France           1      NaN           NaN           0   \n","960     Yugoslavia    Brazil           2      NaN           NaN           1   \n","961        Romania      Peru           3      NaN           NaN           1   \n","962  United States   Belgium           3      NaN           NaN           0   \n","963         France    Mexico           4      NaN           NaN           1   \n","\n","     away_xg  away_penalty      home_manager          home_captain  ...  \\\n","0        2.2           2.0    Lionel Scaloni          Lionel Messi  ...   \n","1        1.2           NaN      Zlatko Dalić           Luka Modrić  ...   \n","2        0.9           NaN  Didier Deschamps           Hugo Lloris  ...   \n","3        0.5           NaN    Lionel Scaloni          Lionel Messi  ...   \n","4        0.9           NaN   Hoalid Regragui          Romain Saïss  ...   \n","..       ...           ...               ...                   ...  ...   \n","959      NaN           NaN  Francisco Olazar       Manuel Ferreira  ...   \n","960      NaN           NaN   Bosko Simonovic       Milutin Ivković  ...   \n","961      NaN           NaN     Octav Luchide          Emerich Vogl  ...   \n","962      NaN           NaN        Bob Millar            Tom Florie  ...   \n","963      NaN           NaN     Raoul Caudron  Alexandre Villaplane  ...   \n","\n","    home_red_card         away_red_card   home_yellow_red_card  \\\n","0             NaN                   NaN                    NaN   \n","1             NaN                   NaN                    NaN   \n","2             NaN                   NaN                    NaN   \n","3             NaN                   NaN                    NaN   \n","4             NaN                   NaN  Walid Cheddira · 90+3   \n","..            ...                   ...                    ...   \n","959           NaN                   NaN                    NaN   \n","960           NaN                   NaN                    NaN   \n","961           NaN  Plácido Galindo · 70                    NaN   \n","962           NaN                   NaN                    NaN   \n","963           NaN                   NaN                    NaN   \n","\n","    away_yellow_red_card                              home_yellow_card_long  \\\n","0                    NaN  ['45+7&rsquor;|2:0|Enzo Fernández', '90+8&rsqu...   \n","1                    NaN                                                NaN   \n","2                    NaN                                                NaN   \n","3                    NaN  ['68&rsquor;|2:0|Cristian Romero', '71&rsquor;...   \n","4                    NaN  ['70&rsquor;|1:0|Achraf Dari', '90+1&rsquor;|1...   \n","..                   ...                                                ...   \n","959                  NaN                                                NaN   \n","960                  NaN                                                NaN   \n","961                  NaN                                                NaN   \n","962                  NaN                                                NaN   \n","963                  NaN                                                NaN   \n","\n","                                 away_yellow_card_long  \\\n","0    ['55&rsquor;|2:0|Adrien Rabiot', '87&rsquor;|2...   \n","1    ['69&rsquor;|2:1|Azzedine Ounahi', '84&rsquor;...   \n","2                    ['27&rsquor;|1:0|Sofiane Boufal']   \n","3    ['32&rsquor;|0:0|Mateo Kovačić', '32&rsquor;|0...   \n","4                           ['87&rsquor;|1:0|Vitinha']   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               home_substitute_in_long  \\\n","0    ['64&rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...   \n","1    ['61&rsquor;|2:1|Nikola Vlašić|for Andrej Kram...   \n","2    ['65&rsquor;|1:0|Marcus Thuram|for Olivier Gir...   \n","3    ['62&rsquor;|2:0|Lisandro Martínez|for Leandro...   \n","4    ['57&rsquor;|1:0|Achraf Dari|for Romain Saïss'...   \n","..                                                 ...   \n","959                                                NaN   \n","960                                                NaN   \n","961                                                NaN   \n","962                                                NaN   \n","963                                                NaN   \n","\n","                               away_substitute_in_long YearsofExperince ASP  \n","0    ['41&rsquor;|2:0|Randal Kolo Muani|for Ousmane...               22  19  \n","1    ['46&rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...               35  33  \n","2    ['21&rsquor;|1:0|Selim Amallah|for Romain Saïs...               30  28  \n","3    ['46&rsquor;|2:0|Mislav Oršić|for Borna Sosa',...               38  35  \n","4    ['51&rsquor;|1:0|João Cancelo|for Raphaël Guer...               38  37  \n","..                                                 ...              ...  ..  \n","959                                                NaN               22  21  \n","960                                                NaN               22  20  \n","961                                                NaN               32  29  \n","962                                                NaN               34  31  \n","963                                                NaN               34  30  \n","\n","[964 rows x 46 columns]"],"text/html":["\n","  <div id=\"df-48c98d3b-1dee-4af4-9ce3-00b21ddfe874\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>home_team</th>\n","      <th>away_team</th>\n","      <th>home_score</th>\n","      <th>home_xg</th>\n","      <th>home_penalty</th>\n","      <th>away_score</th>\n","      <th>away_xg</th>\n","      <th>away_penalty</th>\n","      <th>home_manager</th>\n","      <th>home_captain</th>\n","      <th>...</th>\n","      <th>home_red_card</th>\n","      <th>away_red_card</th>\n","      <th>home_yellow_red_card</th>\n","      <th>away_yellow_red_card</th>\n","      <th>home_yellow_card_long</th>\n","      <th>away_yellow_card_long</th>\n","      <th>home_substitute_in_long</th>\n","      <th>away_substitute_in_long</th>\n","      <th>YearsofExperince</th>\n","      <th>ASP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>3</td>\n","      <td>3.3</td>\n","      <td>4.0</td>\n","      <td>3</td>\n","      <td>2.2</td>\n","      <td>2.0</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['45+7&amp;rsquor;|2:0|Enzo Fernández', '90+8&amp;rsqu...</td>\n","      <td>['55&amp;rsquor;|2:0|Adrien Rabiot', '87&amp;rsquor;|2...</td>\n","      <td>['64&amp;rsquor;|2:0|Marcos Acuña|for Ángel Di Mar...</td>\n","      <td>['41&amp;rsquor;|2:0|Randal Kolo Muani|for Ousmane...</td>\n","      <td>22</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Croatia</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>0.7</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1.2</td>\n","      <td>NaN</td>\n","      <td>Zlatko Dalić</td>\n","      <td>Luka Modrić</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['69&amp;rsquor;|2:1|Azzedine Ounahi', '84&amp;rsquor;...</td>\n","      <td>['61&amp;rsquor;|2:1|Nikola Vlašić|for Andrej Kram...</td>\n","      <td>['46&amp;rsquor;|2:1|Ilias Chair|for Abdelhamid Sa...</td>\n","      <td>35</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>France</td>\n","      <td>Morocco</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Didier Deschamps</td>\n","      <td>Hugo Lloris</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['27&amp;rsquor;|1:0|Sofiane Boufal']</td>\n","      <td>['65&amp;rsquor;|1:0|Marcus Thuram|for Olivier Gir...</td>\n","      <td>['21&amp;rsquor;|1:0|Selim Amallah|for Romain Saïs...</td>\n","      <td>30</td>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Argentina</td>\n","      <td>Croatia</td>\n","      <td>3</td>\n","      <td>2.3</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.5</td>\n","      <td>NaN</td>\n","      <td>Lionel Scaloni</td>\n","      <td>Lionel Messi</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>['68&amp;rsquor;|2:0|Cristian Romero', '71&amp;rsquor;...</td>\n","      <td>['32&amp;rsquor;|0:0|Mateo Kovačić', '32&amp;rsquor;|0...</td>\n","      <td>['62&amp;rsquor;|2:0|Lisandro Martínez|for Leandro...</td>\n","      <td>['46&amp;rsquor;|2:0|Mislav Oršić|for Borna Sosa',...</td>\n","      <td>38</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Morocco</td>\n","      <td>Portugal</td>\n","      <td>1</td>\n","      <td>1.4</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.9</td>\n","      <td>NaN</td>\n","      <td>Hoalid Regragui</td>\n","      <td>Romain Saïss</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Walid Cheddira · 90+3</td>\n","      <td>NaN</td>\n","      <td>['70&amp;rsquor;|1:0|Achraf Dari', '90+1&amp;rsquor;|1...</td>\n","      <td>['87&amp;rsquor;|1:0|Vitinha']</td>\n","      <td>['57&amp;rsquor;|1:0|Achraf Dari|for Romain Saïss'...</td>\n","      <td>['51&amp;rsquor;|1:0|João Cancelo|for Raphaël Guer...</td>\n","      <td>38</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>959</th>\n","      <td>Argentina</td>\n","      <td>France</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Francisco Olazar</td>\n","      <td>Manuel Ferreira</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>960</th>\n","      <td>Yugoslavia</td>\n","      <td>Brazil</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bosko Simonovic</td>\n","      <td>Milutin Ivković</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>22</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>961</th>\n","      <td>Romania</td>\n","      <td>Peru</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Octav Luchide</td>\n","      <td>Emerich Vogl</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>Plácido Galindo · 70</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>962</th>\n","      <td>United States</td>\n","      <td>Belgium</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Bob Millar</td>\n","      <td>Tom Florie</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>963</th>\n","      <td>France</td>\n","      <td>Mexico</td>\n","      <td>4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Raoul Caudron</td>\n","      <td>Alexandre Villaplane</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>964 rows × 46 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48c98d3b-1dee-4af4-9ce3-00b21ddfe874')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-48c98d3b-1dee-4af4-9ce3-00b21ddfe874 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-48c98d3b-1dee-4af4-9ce3-00b21ddfe874');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-092f0d39-3d79-4ab2-9759-6baa8ee2b534\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-092f0d39-3d79-4ab2-9759-6baa8ee2b534')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-092f0d39-3d79-4ab2-9759-6baa8ee2b534 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2940c648-15a6-487b-990d-8625adfd0fa4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2940c648-15a6-487b-990d-8625adfd0fa4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["%matplotlib inline"],"metadata":{"id":"YzKj_k-JucCt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from matplotlib import pyplot as plt"],"metadata":{"id":"WuvcL1AOwA_l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.plot(x = 'ASP',y = ['away_score','home_score'],kind = 'bar', color = ['red','green'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":249},"id":"kLf5CSN_wHGK","executionInfo":{"status":"ok","timestamp":1739425394288,"user_tz":-330,"elapsed":9651,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"f16ad151-259b-429a-82bd-714e964308b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='ASP'>"]},"metadata":{},"execution_count":47},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Error : same length - NaN - Not a Number - dtype - Numpy - 0"],"metadata":{"id":"sEf11GU8yHYl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","\n","#Function to get a graph\n","def getGraph(DataFrame, Column1,Column2):\n","  from matplotlib import pyplot as plt\n","\n","  # Check the length of column1 and column2\n","  if len(DataFrame[Column1]) == len(DataFrame[Column2]):\n","    DataFrame.plot(x = Column1, y = Column2, kind = 'bar', color = ['green','blue'])\n","\n","  else:\n","    print('please check the Column size once')"],"metadata":{"id":"nosEFLAhyeuj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["getGraph(df,'home_score', 'away_score')"],"metadata":{"id":"M2RsEA2b0War","executionInfo":{"status":"ok","timestamp":1739427173194,"user_tz":-330,"elapsed":7847,"user":{"displayName":"Gulivindala Hemanth kumar","userId":"15549891863996974835"}},"outputId":"77250591-650f-464c-cfb2-11d8a3c59c1c","colab":{"base_uri":"https://localhost:8080/","height":235}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}